<% include ./partials/header %> 

<!-- <input id="card-name" type="text">
<!-- placeholder for Elements 
<div id="card-element"></div>
<button id="card-button" data-secret="{{ client_secret }}">
  Submit Payment
</button> 
-->

<div class="container">
    <div class="row">
        <div class="col-md-offest-4 col-md-4">
            <h3>Payment</h3>
            <form id="payment-form" class="form-group">
                <div id="card-element">
                  <!-- Elements will create input elements here -->
                </div>
              
                <!-- We'll put the error messages in this element -->
                <div id="card-errors" role="alert"></div>
                <br>
                <div class="text-right">
                    <button id="submit" class="btn btn-primary">Pay <%= amount %></button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>

    var orderData = {
    items: [{ id: "yelpcamp-registration-fee" }],
    currency: "inr"
    };


// Set your publishable key: remember to change this to your live publishable key in production
// See your keys here: https://dashboard.stripe.com/account/apikeys

var stripe = Stripe('pk_test_51H6CfsDyyp3oaPQG9hcyF2hQlPGdhAaNabfs3OPW5049gGiZ98HMUNlLPwAoSfARHujPTr8FV621Piuw28mTjrg0000FwnCWEK');
var elements = stripe.elements();

// Set up Stripe.js and Elements to use in checkout form
var style = {
  base: {
    color: "#32325d",
  }
};

var card = elements.create("card", { style: style });
card.mount("#card-element");


card.on('change', ({error}) => {
  const displayError = document.getElementById('card-errors');
  if (error) {
    displayError.textContent = error.message;
  } else {
    displayError.textContent = '';
  }
});

  var form = document.getElementById('payment-form');

    form.addEventListener('submit', function(ev) {
    ev.preventDefault();

    stripe
    .createPaymentMethod("card", card)
            .then(function(result) {
            if (result.error) {
            var displayError = document.getElementById('card-errors');
            displayError.textContent = result.error.message;
            } else {

                orderData.paymentMethodId = result.paymentMethod.id;

                return fetch("/pay", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(orderData)
                });
            }
        })

        .then(function(result) {
        return result.json();
        })
        .then(function(response) {
        if (response.error) {
            var displayError = document.getElementById('card-errors');
            displayError.textContent = response.error.message;
        } else {

            window.location.href="/campgrounds?paid=true"
        }
        });

    });

</script>

<% include ./partials/footer %> 
